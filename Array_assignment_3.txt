Que 1: Write a program to merge two arrays of integers by reading one number at a time from each array
until one of the array is exhausted, and then concatenating the remaining numbers. 

Program: 
package Assignment3;
import java.io.*; 
  
class GFG { 
    static void alternateMerge(int arr1[], int arr2[],  
                               int n1, int n2, int arr3[]) 
    { 
        int i = 0, j = 0, k = 0; 
      
       
        while (i < n1 && j < n2) 
        { 
            arr3[k++] = arr1[i++]; 
            arr3[k++] = arr2[j++]; 
        } 
      
        
        while (i < n1) 
            arr3[k++] = arr1[i++]; 
      
   
        while (j < n2) 
            arr3[k++] = arr2[j++]; 
    } 
      

    public static void main(String args[]) 
    { 
        int arr1[] = {1, 3, 5, 7, 9, 11}; 
        int n1 = arr1.length; 
      
        int arr2[] = {2, 4, 6, 8}; 
        int n2 = arr2.length; 
      
        int arr3[] = new int[n1+n2]; 
        alternateMerge(arr1, arr2, n1, n2, arr3); 
      
        System.out.println("Array after merging"); 
        for (int i = 0; i < n1 + n2; i++) 
            System.out.print( arr3[i] + " "); 
    } 
} 


Que 2:.Write a program which takes an array of integers and prints the running average of 3 consecutive
integers. In case the array has fewer than 3 integers, there should be no output. 

Program: 
package Assignment3;
class SumOfThreeConsecutiveNumbersInArray
{    public static void main(String s[])
    {
        int[] input = {2, 6, 3, 8, 1};
        int[] output = sumOfThreeConsecutiveNumbers(input);
        System.out.print("Output array is : ");
        for(int i = 0; i < output.length; i++)
        {
            System.out.print(output[i] + ", ");
        }

    }


public static int[] sumOfThreeConsecutiveNumbers(int[] input)
{
  int[] output = null;

    return output;
}
}

Que 3: Write a program which generates the series 1,4,27,16,125,36 


Program: 
package Assignment3;
class GFG { 
public static int logicOfSequence(int N) 
{ 
    if (N % 2 == 0)  
        N = N * N;  
    else
        N = N * N * N;  
    return N; 
} 
  
public static void main(String args[]) 
{ 
    int N = 6; 
    System.out.println(logicOfSequence(N)); 
} 
}

Que 4:

Program to sort in in acending order:
package Assignment3;
import java.util.Arrays; 
  
public class SortExample 
{ 
    public static void main(String[] args) 
    { 
        
        int[] arr = {5,14,35,90,139}; 
  
        Arrays.sort(arr, 1, 5); 
  
        System.out.printf("Modified arr[] : %s", 
                          Arrays.toString(arr)); 
    } 
} 

Program to sort in in decending order:
package Assignment3;

import java.util.Arrays; 
import java.util.Collections; 
  
public class SortExample 
{ 
    public static void main(String[] args) 
    { 
        Integer[] arr = {5,14,35,90,139}; 
  
      
        Arrays.sort(arr, Collections.reverseOrder()); 
  
        System.out.printf("Modified arr[] : %s", 
                          Arrays.toString(arr)); 
    } 

Que 5:Write a function which accepts an floating point number and counts the number of decimal
places in the number without using a string. 

Program:
package Assignment3;
public class Third {
   public static void main(String args[]){
   double no =3.44;
int count =0;
while(no!=((int)no))
{
    count++;
    no=no*10;
}
System.out.println(count);

}
}


Que 6:Print the third-largest number in an array without sorting it 

Program:
package Assignment3;
public class ThirdLargestNumberInAnArray {
   public static void main(String args[]){
   int temp, size;
   int array[] = { 24,54,31,16,82,45,67};
   size = array.length;
   
   for(int i = 0; i<size; i++ ){
      for(int j = i+1; j<size; j++){
         if(array[i]>array[j]){
            temp = array[i];
            array[i] = array[j];
            array[j] = temp;
         }
      }
   }
   System.out.println("Third largest number is:: "+array[size-3]);
   }
}



